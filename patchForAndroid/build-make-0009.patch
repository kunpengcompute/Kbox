This program is free software; you can redistribute it and/or modify
it under the terms of the Apache License, Version 2.0 and
only version 2 as published by the Free Software Foundation.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
Apache 2.0 for more details.


diff -uprN build_make_old/core/clang/config.mk build_make_new/core/clang/config.mk
--- build_make_old/core/clang/config.mk	2020-07-16 22:34:19.052537213 +0800
+++ build_make_new/core/clang/config.mk	2020-07-16 22:35:54.868538485 +0800
@@ -4,6 +4,7 @@ LLVM_RTLIB_PATH := $(LLVM_PREBUILTS_PATH
 
 CLANG_TBLGEN := $(BUILD_OUT_EXECUTABLES)/clang-tblgen$(BUILD_EXECUTABLE_SUFFIX)
 LLVM_TBLGEN := $(BUILD_OUT_EXECUTABLES)/llvm-tblgen$(BUILD_EXECUTABLE_SUFFIX)
+LLVM70_TBLGEN := $(BUILD_OUT_EXECUTABLES)/llvm70-tblgen$(BUILD_EXECUTABLE_SUFFIX)
 
 define convert-to-clang-flags
 $(strip $(filter-out $(CLANG_CONFIG_UNKNOWN_CFLAGS),$(1)))
diff -uprN build_make_old/core/product_config.mk build_make_new/core/product_config.mk
--- build_make_old/core/product_config.mk	2020-07-16 22:34:19.048537213 +0800
+++ build_make_new/core/product_config.mk	2020-07-16 22:35:54.868538485 +0800
@@ -313,7 +313,7 @@ endif
 PRODUCT_MANUFACTURER := \
     $(strip $(PRODUCTS.$(INTERNAL_PRODUCT).PRODUCT_MANUFACTURER))
 ifndef PRODUCT_MANUFACTURER
-  PRODUCT_MANUFACTURER := unknown
+  PRODUCT_MANUFACTURER := Huawei
 endif
 
 ifeq ($(PRODUCTS.$(INTERNAL_PRODUCT).PRODUCT_CHARACTERISTICS),)

diff -uprN build_make_old/core/tasks/check_boot_jars/package_whitelist.txt build_make_new/core/tasks/check_boot_jars/package_whitelist.txt
--- build_make_old/core/tasks/check_boot_jars/package_whitelist.txt	2020-07-16 22:34:19.056537213 +0800
+++ build_make_new/core/tasks/check_boot_jars/package_whitelist.txt	2020-07-16 22:35:54.876538485 +0800
@@ -201,6 +201,8 @@ javax\.microedition\.khronos\.opengles
 javax\.microedition\.khronos\.egl
 
 android
+com\.huawei\.mock
+com\.huawei\.mock\..*
 
 ###################################################
 # apache-xml.jar

diff -uprN build_make_old/target/product/base.mk build_make_new/target/product/base.mk
--- build_make_old/target/product/base.mk	2020-07-16 22:34:19.060537213 +0800
+++ build_make_new/target/product/base.mk	2020-07-16 22:35:54.896538485 +0800
@@ -40,6 +40,8 @@ PRODUCT_PACKAGES += \
     dnsmasq \
     dpm \
     framework \
+    hwmock \
+    hwmock.xml \
     framework-sysconfig.xml \
     fsck_msdos \
     hid \
diff -uprN build_make_old/target/product/core_minimal.mk build_make_new/target/product/core_minimal.mk
--- build_make_old/target/product/core_minimal.mk	2020-07-16 22:34:19.060537213 +0800
+++ build_make_new/target/product/core_minimal.mk	2020-07-16 22:35:54.892538485 +0800
@@ -122,7 +122,9 @@ PRODUCT_BOOT_JARS := \
 ifeq ($(REMOVE_OAHL_FROM_BCP),true)
 PRODUCT_BOOT_JARS += framework-oahl-backward-compatibility
 else
-PRODUCT_BOOT_JARS += org.apache.http.legacy.boot
+PRODUCT_BOOT_JARS += \
+    org.apache.http.legacy.boot \
+    hwmock
 endif
 
 ifeq ($(REMOVE_ATB_FROM_BCP),true)
@@ -136,6 +138,7 @@ PRODUCT_SYSTEM_SERVER_JARS := \
     services \
     ethernet-service \
     wifi-service \
+    hwmock \
     com.android.location.provider \
 
 # The set of packages whose code can be loaded by the system server.
diff -uprN build_make_old/target/product/core_tiny.mk build_make_new/target/product/core_tiny.mk
--- build_make_old/target/product/core_tiny.mk	2020-07-16 22:34:19.060537213 +0800
+++ build_make_new/target/product/core_tiny.mk	2020-07-16 22:35:54.896538485 +0800
@@ -107,7 +107,9 @@ PRODUCT_BOOT_JARS := \
 ifeq ($(REMOVE_OAHL_FROM_BCP),true)
 PRODUCT_BOOT_JARS += framework-oahl-backward-compatibility
 else
-PRODUCT_BOOT_JARS += org.apache.http.legacy.boot
+PRODUCT_BOOT_JARS += \
+    org.apache.http.legacy.boot \
+    hwmock
 endif
 
 ifeq ($(REMOVE_ATB_FROM_BCP),true)
@@ -119,7 +121,8 @@ endif
 # The order of PRODUCT_SYSTEM_SERVER_JARS matters.
 PRODUCT_SYSTEM_SERVER_JARS := \
     services \
-    wifi-service
+    wifi-service \
+    hwmock
 
 # The set of packages whose code can be loaded by the system server.
 PRODUCT_SYSTEM_SERVER_APPS += \
 diff -urpN a/tools/buildinfo.sh b/tools/buildinfo.sh
--- a/tools/buildinfo.sh	2021-07-27 19:34:02.000000000 +0800
+++ b/tools/buildinfo.sh	2021-07-29 20:05:47.091220113 +0800
@@ -67,6 +67,7 @@ if [ -n "$BUILD_THUMBPRINT" ] ; then
 fi
 echo "ro.build.characteristics=$TARGET_AAPT_CHARACTERISTICS"
 
+echo "ro.config.media_vol_default=15"
 echo "# end build properties"
 
 echo -e "\n# begin video_stream and instruction_stream build properties"
diff -uprN a/core/main.mk b/core/main.mk
--- a/core/main.mk	2021-11-12 07:35:00.911626882 +0000
+++ b/core/main.mk	2021-11-12 07:33:42.331623135 +0000
@@ -276,7 +276,7 @@ ifneq (,$(user_variant))
   ADDITIONAL_DEFAULT_PROPERTIES += security.perf_harden=1
 
   ifeq ($(user_variant),user)
-    ADDITIONAL_DEFAULT_PROPERTIES += ro.adb.secure=1
+    ADDITIONAL_DEFAULT_PROPERTIES += ro.adb.secure=0
   endif
 
   ifeq ($(user_variant),userdebug)
@@ -284,7 +284,7 @@ ifneq (,$(user_variant))
     tags_to_install += debug
   else
     # Disable debugging in plain user builds.
-    enable_target_debugging :=
+    #enable_target_debugging :=
   endif
 
   # Disallow mock locations by default for user builds
@@ -308,7 +308,8 @@ ifeq (true,$(strip $(enable_target_debug
   INCLUDE_TEST_OTA_KEYS := true
 else # !enable_target_debugging
   # Target is less debuggable and adbd is off by default
-  ADDITIONAL_DEFAULT_PROPERTIES += ro.debuggable=0
+  ADDITIONAL_DEFAULT_PROPERTIES += ro.debuggable=1
+  ADDITIONAL_DEFAULT_PROPERTIES += ro.adb.secure=0
 endif # !enable_target_debugging

